<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sCharacterIdle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>sMask</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>hsp = 0;
vsp = 0;
hspMax = 3;
vspMax = 12;
acc = 1;
dec = 0.6;
grav = 1.5;

Keys = ds_list_create();

KEY_LEFT = vk_left;
KEY_RIGHT = vk_right;
KEY_UP = vk_up;

SPR_RUNNING = sCharacterRun;
SPR_IDLE = sCharacterIdle;
SPR_JUMP = sCharacterJump;

SOLID = oSolid;

grounded = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//horizontal movement
if (keyboard_check_direct(KEY_RIGHT) &amp;&amp; !place_meeting(x+hsp,y,SOLID)){
    hsp = min(hsp + acc,hspMax);
    image_speed = 0.5;
    sprite_index = SPR_RUNNING;
} else if (keyboard_check_direct(KEY_LEFT) &amp;&amp; !place_meeting(x-hsp,y,SOLID)){
    hsp = max(hsp - acc,-hspMax);
    image_speed = 0.5;
    sprite_index = SPR_RUNNING;
} else {
    hsp = 0;
    image_speed = 0.06;
    sprite_index = SPR_IDLE;
}
//horizontal collisions
if (place_meeting(x+hsp,y,SOLID)){
    var tmp;
    tmp = hsp;
    hsp = 0;
    while(!place_meeting(x+sign(tmp),y,SOLID)){
        x += sign(tmp);
    }
}
x += hsp;
//jumping/gravity
if(!place_meeting(x,y+1,SOLID)){
    vsp += grav;
}

if(keyboard_check_direct(KEY_UP) &amp;&amp; grounded){
    grounded = 0;
    vsp = -sqrt(2*grav*64);
}
//vertial collisions
if (place_meeting(x,y+vsp,SOLID)){
    var tmp;
    tmp = vsp;
    vsp = 0;
    while(!place_meeting(x,y+sign(tmp),SOLID)){
        y += sign(tmp);
    }
    if (sign(tmp) &gt;= 0){
        grounded = 1;
    }
}
//image control
if(sign(hsp) != 0){
    image_xscale = sign(hsp);
}
y += vsp;
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints>
    <point>8,8</point>
    <point>8,8</point>
  </PhysicsShapePoints>
</object>
